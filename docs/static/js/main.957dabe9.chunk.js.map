{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","loagin","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCWhBG,EApBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEI,mCAEVC,EAJM,iDAI2CC,UAAWH,GAJtD,6BAEI,oCAFJ,SAMWI,MAAOF,GANlB,cAMNG,EANM,gBAOWA,EAASC,OAPpB,uBAOJC,EAPI,EAOJA,KAEFC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAb9B,kBAiBJM,GAjBI,4CAAH,sDCEAO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNC,QAAQ,SAIrB,CAAE1B,IAEEqB,EDjB0BM,CAAc3B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAmB,GAAK,OACb,cAAC,EAAD,eAGSA,GAFCA,EAAMjB,aEYzBkB,EA1BM,WAAM,MAIa3C,mBAAS,CAAC,cAJvB,mBAIhB4C,EAJgB,KAIJ7C,EAJI,KAMvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCblC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.957dabe9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {            \n            setCategories( cat => [ inputValue, ...cat ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","const getGifs = async( category ) => {\n\n    const api_key = 'lQUaEm9LbOJzJ1iy8HYDQK1HBkW01fVC';\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${ api_key }`;\n\n    const response = await fetch( url );\n    const { data } = await response.json();\n\n    const gifs = data.map( (img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    } )\n\n    return  gifs;\n}\n\nexport default getGifs;","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images ,loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\n\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\n\n            <div className='card-grid'>  \n                { \n                    images.map( image => (\n                        <GifGridItem \n                            key={ image.id }\n                            // image={ image }\n                            { ...image }\n                        />\n                    ))            \n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport getGifs from \"../helpers/getGifs\"\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loagin: false\n                });\n            }) \n            \n    }, [ category ])\n\n    return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category } \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}; \n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}